!function(){"use strict";const e=new class{constructor(e){let{baseUrl:t,headers:s}=e;this._baseUrl=t,this._headers=s}getInitialCards(){return fetch("".concat(this._baseUrl,"/cards"),{headers:this._headers}).then((e=>e.ok?e.json():Promise.reject(e.statusText))).catch(console.log)}}({baseUrl:"https://around.nomoreparties.co/v1/group-12",headers:{authorization:"d117ca4c-01ef-4f19-abee-387b4e32e69d","Content-Type":"application/json"}});function t(e,t,s){return t in e?Object.defineProperty(e,t,{value:s,enumerable:!0,configurable:!0,writable:!0}):e[t]=s,e}class s{constructor(e,s){t(this,"_hasInvalidInput",(e=>e.some((e=>!e.validity.valid)))),t(this,"_toggleButtonState",(()=>{this._hasInvalidInput(this._inputList)?(this._buttonElement.classList.add(this._inactiveButtonClass),this._buttonElement.setAttribute("disabled",!0)):(this._buttonElement.classList.remove(this._inactiveButtonClass),this._buttonElement.removeAttribute("disabled"))})),this._inputSelector=e.inputSelector,this._submitButtonSelector=e.submitButtonSelector,this._inactiveButtonClass=e.inactiveButtonClass,this._inputErrorClass=e.inputErrorClass,this._errorClass=e.errorClass,this._formElement=s,this._inputList=Array.from(this._formElement.querySelectorAll(this._inputSelector)),this._buttonElement=this._formElement.querySelector(this._submitButtonSelector)}_showInputError(e,t){const s=this._formElement.querySelector("#".concat(e.id,"-error"));s.textContent=t,s.classList.add(this._errorClass)}_hideInputError(e){const t=this._formElement.querySelector("#".concat(e.id,"-error"));t.classList.remove(this._errorClass),t.textContent=""}_checkInputValidity(e){e.validity.valid?this._hideInputError(e):this._showInputError(e,e.validationMessage)}_setInputsEventListeners(){this._inputList.forEach((e=>{e.addEventListener("input",(()=>{this._checkInputValidity(e),this._toggleButtonState()}))}))}resetValidation(){this._inputList.forEach((e=>{this._hideInputError(e)})),this._toggleButtonState()}enableValidation(){this._formElement.addEventListener("submit",(e=>{e.preventDefault()})),this._setInputsEventListeners()}}class n{constructor(e){var t,s;s=e=>{"Escape"===e.key&&this.close()},(t="_handleEscClose")in this?Object.defineProperty(this,t,{value:s,enumerable:!0,configurable:!0,writable:!0}):this[t]=s,this._popupElement=document.querySelector(e)}open(){this._popupElement.classList.add("popup_active"),document.addEventListener("keydown",this._handleEscClose)}close(){this._popupElement.classList.remove("popup_active"),document.removeEventListener("keydown",this._handleEscClose)}setEventListeners(){this._popupElement.addEventListener("mousedown",(e=>{(e.target.classList.contains("popup_active")||e.target.classList.contains("popup__exit-icon"))&&this.close()}))}}class r extends n{constructor(e,t){super(e),this._formPopupElement=this._popupElement.querySelector(".popup__form"),this._inputList=this._formPopupElement.querySelectorAll(".popup__form-input"),this._submitHandler=t}getInputValues(){const e={};return this._inputList.forEach((t=>{const s=t.name;e[s]=t.value})),e}setEventListeners(){super.setEventListeners(),this._formPopupElement.addEventListener("submit",(e=>{e.preventDefault(),this._submitHandler(),this.close()}))}close(){super.close(),this._formPopupElement.reset()}}const i=".elements__list",o=".profile__name",l=".profile__role",a=(document.querySelector(i),document.querySelector(".profile__edit-btn")),c=document.querySelector(".profile__add-btn");document.querySelector("#inputName"),document.querySelector("#inputRole");class u{constructor(e,t){let{text:s,image:n,handleCardClick:r}=e;this._text=s,this._image=n,this._templateSelector=t,this._handleCardClick=r,this._element=this._getTemplate(),this._imageItem=this._element.querySelector(".elements__image"),this._textItem=this._element.querySelector(".elements__text"),this._likeItem=this._element.querySelector(".elements__like-btn"),this._deleteItem=this._element.querySelector(".elements__delete-icon")}_getTemplate(){return document.querySelector(this._templateSelector).content.querySelector(".elements__element").cloneNode(!0)}generateCard(){return this._imageItem.src=this._image,this._textItem.textContent=this._text,this._imageItem.alt="view of ".concat(this._text),this.setEventListeners(),this._element}setEventListeners(){this._imageItem.addEventListener("click",(()=>{this._handleCardClick()})),this._likeItem.addEventListener("click",(()=>{this._handleLikeToggle()})),this._deleteItem.addEventListener("click",(()=>{this._handleDeleteCard()}))}_handleDeleteCard(){this._element.remove()}_handleLikeToggle(){this._likeItem.classList.toggle("elements__svg-heart_liked")}}const _=new r("#addImage",(function(){const e=_.getInputValues(),t=e.form__title,s=e.form__imageLink,n={};n.name=t,n.link=s,b.addItem(g(n))})),m=new r("#editProfile",(function(){const e=m.getInputValues();h.setUserInfo(e)})),h=new class{constructor(e){let{nameSelector:t,roleSelector:s}=e;this._nameSelector=t,this._roleSelector=s,this._profileName=document.querySelector(this._nameSelector),this._profileRole=document.querySelector(this._roleSelector)}getUserInfo(){const e={};return e.name=this._profileName.textContent,e.role=this._profileRole.textContent,e}setUserInfo(e){this._profileName.textContent=e.form__name,this._profileRole.textContent=e.form__role}}({nameSelector:o,roleSelector:l}),p=new class extends n{constructor(e){var t,s;super(e),s=(e,t)=>{this._imageFile.src=e,this._imageText.textContent=t,this._imageFile.alt="view of ".concat(t),super.open()},(t="open")in this?Object.defineProperty(this,t,{value:s,enumerable:!0,configurable:!0,writable:!0}):this.open=s,this._imageFile=this._popupElement.querySelector(".popup__imagePopUp"),this._imageText=this._popupElement.querySelector(".popup__imagePopUp-text")}}("#imagePopUp"),d=document.querySelector(o),f=document.querySelector(l),E={};var v;v={inputSelector:".popup__form-input",submitButtonSelector:".popup__form-submit-btn",inactiveButtonClass:"popup__form-submit-btn_inactive",inputErrorClass:"popup__form-errorMsg",errorClass:"popup__form-errorMsg_active",formSelector:".popup__form"},Array.from(document.querySelectorAll(v.formSelector)).forEach((e=>{const t=new s(v,e),n=e.getAttribute("name");E[n]=t,t.enableValidation()})),m.setEventListeners(),_.setEventListeners();const g=e=>{const t=e.name,s=e.link;p.setEventListeners();const n=new u({text:t,image:s,handleCardClick:()=>{(e=>{e.open(s,t)})(p)}},"#card-template");return n.generateCard()};console.log(e.getInitialCards().then((e=>{console.log(e)})));const b=new class{constructor(e,t){let{data:s,renderer:n}=e;this._container=document.querySelector(t),this._items=s,this._renderer=n}renderer(){this._items.forEach((e=>{this._renderer(e)}))}addItem(e){this._container.prepend(e)}}({data:e.getInitialCards().then((e=>b.addItem(g(e)))),renderer:e=>{b.addItem(g(e))}},i);a.addEventListener("click",(()=>{const e=h.getUserInfo();inputName.setAttribute("value",e.name),inputRole.setAttribute("value",e.role),E.edit__form.resetValidation(),m.open()})),c.addEventListener("click",(()=>{E.add__form.resetValidation(),_.open()})),fetch("https://around.nomoreparties.co/v1/group-12/users/me",{method:"GET",headers:{authorization:"d117ca4c-01ef-4f19-abee-387b4e32e69d"}}).then((e=>e.json())).then((e=>{d.textContent=e.name,f.textContent=e.about}))}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,