!function(){"use strict";function e(e,t,s){return t in e?Object.defineProperty(e,t,{value:s,enumerable:!0,configurable:!0,writable:!0}):e[t]=s,e}class t{constructor(t,s){e(this,"_hasInvalidInput",(e=>e.some((e=>!e.validity.valid)))),e(this,"_toggleButtonState",(()=>{this._hasInvalidInput(this._inputList)?(this._buttonElement.classList.add(this._inactiveButtonClass),this._buttonElement.setAttribute("disabled",!0)):(this._buttonElement.classList.remove(this._inactiveButtonClass),this._buttonElement.removeAttribute("disabled"))})),this._inputSelector=t.inputSelector,this._submitButtonSelector=t.submitButtonSelector,this._inactiveButtonClass=t.inactiveButtonClass,this._inputErrorClass=t.inputErrorClass,this._errorClass=t.errorClass,this._formElement=s,this._inputList=Array.from(this._formElement.querySelectorAll(this._inputSelector)),this._buttonElement=this._formElement.querySelector(this._submitButtonSelector)}_showInputError(e,t){const s=this._formElement.querySelector("#".concat(e.id,"-error"));s.textContent=t,s.classList.add(this._errorClass)}_hideInputError(e){const t=this._formElement.querySelector("#".concat(e.id,"-error"));t.classList.remove(this._errorClass),t.textContent=""}_checkInputValidity(e){e.validity.valid?this._hideInputError(e):this._showInputError(e,e.validationMessage)}_setInputsEventListeners(){this._inputList.forEach((e=>{e.addEventListener("input",(()=>{this._checkInputValidity(e),this._toggleButtonState()}))}))}resetValidation(){this._inputList.forEach((e=>{this._hideInputError(e)})),this._toggleButtonState()}enableValidation(){this._formElement.addEventListener("submit",(e=>{e.preventDefault()})),this._setInputsEventListeners()}}class s{constructor(e){var t,s;s=e=>{"Escape"===e.key&&this.close()},(t="_handleEscClose")in this?Object.defineProperty(this,t,{value:s,enumerable:!0,configurable:!0,writable:!0}):this[t]=s,this._popupElement=document.querySelector(e)}open(){this._popupElement.classList.add("popup_active"),document.addEventListener("keydown",this._handleEscClose)}close(){this._popupElement.classList.remove("popup_active"),document.removeEventListener("keydown",this._handleEscClose)}setEventListeners(){this._popupElement.addEventListener("mousedown",(e=>{(e.target.classList.contains("popup_active")||e.target.classList.contains("popup__exit-icon"))&&this.close()}))}}class n extends s{constructor(e,t){super(e),this._formPopupElement=this._popupElement.querySelector(".popup__form"),this._inputList=this._formPopupElement.querySelectorAll(".popup__form-input"),this._submitHandler=t}getInputValues(){const e={};return this._inputList.forEach((t=>{const s=t.name;e[s]=t.value})),e}setEventListeners(){super.setEventListeners(),this._formPopupElement.addEventListener("submit",(e=>{e.preventDefault(),this._submitHandler(),this.close()}))}close(){super.close(),this._formPopupElement.reset()}}const i=".elements__list",r=(document.querySelector(i),document.querySelector(".profile__edit-btn")),o=document.querySelector(".profile__add-btn");document.querySelector("#inputName"),document.querySelector("#inputRole");class l{constructor(e,t){let{text:s,image:n,handleCardClick:i}=e;this._text=s,this._image=n,this._templateSelector=t,this._handleCardClick=i,this._element=this._getTemplate(),this._imageItem=this._element.querySelector(".elements__image"),this._textItem=this._element.querySelector(".elements__text"),this._likeItem=this._element.querySelector(".elements__like-btn"),this._deleteItem=this._element.querySelector(".elements__delete-icon")}_getTemplate(){return document.querySelector(this._templateSelector).content.querySelector(".elements__element").cloneNode(!0)}generateCard(){return this._imageItem.src=this._image,this._textItem.textContent=this._text,this._imageItem.alt="view of ".concat(this._text),this.setEventListeners(),this._element}setEventListeners(){this._imageItem.addEventListener("click",(()=>{this._handleCardClick()})),this._likeItem.addEventListener("click",(()=>{this._handleLikeToggle()})),this._deleteItem.addEventListener("click",(()=>{this._handleDeleteCard()}))}_handleDeleteCard(){this._element.remove()}_handleLikeToggle(){this._likeItem.classList.toggle("elements__svg-heart_liked")}}const a=new n("#addImage",(function(){const e=a.getInputValues(),t=e.form__title,s=e.form__imageLink,n={};n.name=t,n.link=s,d.addItem(h(n))})),c=new n("#editProfile",(function(){const e=c.getInputValues();u.setUserInfo(e)})),_=new class extends s{constructor(e){var t,s;super(e),s=(e,t)=>{this._imageFile.src=e,this._imageText.textContent=t,this._imageFile.alt="view of ".concat(t),super.open()},(t="open")in this?Object.defineProperty(this,t,{value:s,enumerable:!0,configurable:!0,writable:!0}):this.open=s,this._imageFile=this._popupElement.querySelector(".popup__imagePopUp"),this._imageText=this._popupElement.querySelector(".popup__imagePopUp-text")}}("#imagePopUp"),u=new class{constructor(e){let{nameSelector:t,roleSelector:s}=e;this._nameSelector=t,this._roleSelector=s,this._profileName=document.querySelector(this._nameSelector),this._profileRole=document.querySelector(this._roleSelector)}getUserInfo(){const e={};return e.name=this._profileName.textContent,e.role=this._profileRole.textContent,e}setUserInfo(e){this._profileName.textContent=e.form__name,this._profileRole.textContent=e.form__role}}({nameSelector:".profile__name",roleSelector:".profile__role"}),m={};var p;p={inputSelector:".popup__form-input",submitButtonSelector:".popup__form-submit-btn",inactiveButtonClass:"popup__form-submit-btn_inactive",inputErrorClass:"popup__form-errorMsg",errorClass:"popup__form-errorMsg_active",formSelector:".popup__form"},Array.from(document.querySelectorAll(p.formSelector)).forEach((e=>{const s=new t(p,e),n=e.getAttribute("name");m[n]=s,s.enableValidation()})),c.setEventListeners(),a.setEventListeners();const h=e=>{const t=e.name,s=e.link;_.setEventListeners();const n=new l({text:t,image:s,handleCardClick:()=>{(e=>{e.open(s,t)})(_)}},"#card-template");return n.generateCard()},d=new class{constructor(e,t){let{data:s,renderer:n}=e;this._container=document.querySelector(t),this._items=s,this._renderer=n}renderer(){this._items.forEach((e=>{this._renderer(e)}))}addItem(e){this._container.prepend(e)}}({data:[{name:"Yosemite Valley",link:"https://code.s3.yandex.net/web-code/yosemite.jpg"},{name:"Lake Louise",link:"https://code.s3.yandex.net/web-code/lake-louise.jpg"},{name:"Bald Mountains",link:"https://code.s3.yandex.net/web-code/bald-mountains.jpg"},{name:"Latemar",link:"https://code.s3.yandex.net/web-code/latemar.jpg"},{name:"Vanoise National Park",link:"https://code.s3.yandex.net/web-code/vanoise.jpg"},{name:"Lago di Braies",link:"https://code.s3.yandex.net/web-code/lago.jpg"}],renderer:e=>{d.addItem(h(e))}},i);d.renderer(),r.addEventListener("click",(()=>{const e=u.getUserInfo();inputName.setAttribute("value",e.name),inputRole.setAttribute("value",e.role),m.edit__form.resetValidation(),c.open()})),o.addEventListener("click",(()=>{m.add__form.resetValidation(),a.open()}))}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,